// <auto-generated />
using System;
using KMChartsUpdater.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KMChartsUpdater.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210615235127_albums")]
    partial class albums
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChartId")
                        .HasColumnType("int");

                    b.Property<string>("ContentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverbUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExplicit")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.HasIndex("LabelId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.AlbumPositionFix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("ChartFixId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<long>("Plays")
                        .HasColumnType("bigint");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ChartFixId");

                    b.ToTable("AlbumPositionFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Audio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChartId")
                        .HasColumnType("int");

                    b.Property<bool>("IsExplicit")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.HasIndex("LabelId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Chart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.ChartFix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChartId")
                        .HasColumnType("int");

                    b.Property<string>("NormalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.ToTable("ChartFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.PositionFix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AudioId")
                        .HasColumnType("int");

                    b.Property<int?>("ChartFixId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ChartFixId");

                    b.ToTable("PositionFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Album", b =>
                {
                    b.HasOne("KMChartsUpdater.DAL.Entities.Chart", "Chart")
                        .WithMany()
                        .HasForeignKey("ChartId");

                    b.HasOne("KMChartsUpdater.DAL.Entities.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.Navigation("Chart");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.AlbumPositionFix", b =>
                {
                    b.HasOne("KMChartsUpdater.DAL.Entities.Album", "Album")
                        .WithMany("AlbumPositionFixes")
                        .HasForeignKey("AlbumId");

                    b.HasOne("KMChartsUpdater.DAL.Entities.ChartFix", "ChartFix")
                        .WithMany()
                        .HasForeignKey("ChartFixId");

                    b.Navigation("Album");

                    b.Navigation("ChartFix");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Audio", b =>
                {
                    b.HasOne("KMChartsUpdater.DAL.Entities.Chart", "Chart")
                        .WithMany("Audios")
                        .HasForeignKey("ChartId");

                    b.HasOne("KMChartsUpdater.DAL.Entities.Label", "Label")
                        .WithMany("Audios")
                        .HasForeignKey("LabelId");

                    b.Navigation("Chart");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.ChartFix", b =>
                {
                    b.HasOne("KMChartsUpdater.DAL.Entities.Chart", "Chart")
                        .WithMany("ChartFixes")
                        .HasForeignKey("ChartId");

                    b.Navigation("Chart");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.PositionFix", b =>
                {
                    b.HasOne("KMChartsUpdater.DAL.Entities.Audio", "Audio")
                        .WithMany("PositionFixes")
                        .HasForeignKey("AudioId");

                    b.HasOne("KMChartsUpdater.DAL.Entities.ChartFix", "ChartFix")
                        .WithMany("PositionFixes")
                        .HasForeignKey("ChartFixId");

                    b.Navigation("Audio");

                    b.Navigation("ChartFix");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Album", b =>
                {
                    b.Navigation("AlbumPositionFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Audio", b =>
                {
                    b.Navigation("PositionFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Chart", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("ChartFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.ChartFix", b =>
                {
                    b.Navigation("PositionFixes");
                });

            modelBuilder.Entity("KMChartsUpdater.DAL.Entities.Label", b =>
                {
                    b.Navigation("Audios");
                });
#pragma warning restore 612, 618
        }
    }
}
